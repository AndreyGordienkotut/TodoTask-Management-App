# --- CI/CD CONFIGURATION FOR GitLab ---
# –≠—Ç–∞–ø—ã:
# 1. –°–±–æ—Ä–∫–∞ Gradle
# 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ Docker Compose
# 4. (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ docker-compose up –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏

stages:
  - build
  - test
  - docker
  - deploy

# === BUILD STAGE ===
build:
  stage: build
  image: gradle:8.4-jdk17
  script:
    - chmod +x ./gradlew
    - echo "üî® Building project..."
    - ./gradlew clean build -x test --no-daemon
  artifacts:
    paths:
      - build/libs/
  only:
    - master
    - merge_requests

# === TEST STAGE ===
test:
  stage: test
  image: gradle:8.4-jdk17
  script:
    - chmod +x ./gradlew
    - echo "üß™ Running tests..."
    - ./gradlew test --no-daemon
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
  only:
    - master
    - merge_requests

# === DOCKER BUILD STAGE ===
docker-build:
  stage: docker
  image: docker:27.0.3
  services:
    - docker:dind
  script:
    - chmod +x ./gradlew
    - echo "üê≥ Building Docker images with Docker Compose..."
    - docker compose -f docker-compose.yml build
  only:
    - master

# === DEPLOY STAGE (optional, manual) ===
deploy:
  stage: deploy
  image: docker:27.0.3
  services:
    - docker:dind
  script:
    - echo "üöÄ Starting containers for testing..."
    - docker compose -f docker-compose.yml up -d
    - docker ps
  when: manual
  only:
    - master
