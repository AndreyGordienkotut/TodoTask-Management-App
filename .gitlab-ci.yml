
stages:
  - build
  - test
  - docker
  - deploy

build:
  stage: build
  image: gradle:8.4-jdk17
  script:
    - chmod +x ./gradlew
    - echo "🔨 Building project..."
    - ./gradlew clean :userService:bootJar :taskService:bootJar :notificationService:bootJar :eureka-server:bootJar --no-daemon
  artifacts:
    paths:
      - "**/build/libs/"
  only:
    - master
    - merge_requests
test:
  stage: test
  image: docker:27.0.3
  services:
    - name: docker:27.0.3-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1

    TEST_DB_USERNAME: $TEST_DB_USERNAME
    TEST_DB_PASSWORD: $TEST_DB_PASSWORD
    TEST_DB_URL: $TEST_DB_URL
    TEST_JWT_SECRET: $TEST_JWT_SECRET
    TEST_JWT_EXPIRATION: $TEST_JWT_EXPIRATION
    TEST_JWT_REFRESH_EXPIRATION: $TEST_JWT_REFRESH_EXPIRATION


    TELEG_USERNAME: $TELEG_USERNAME
    TELEG_TOKEN: $TELEG_TOKEN
    TEST_TELEG_USERNAME: $TEST_TELEG_USERNAME
    TEST_TELEG_TOKEN: $TEST_TELEG_TOKEN

    MAIL_HOST: $MAIL_HOST
    MAIL_PORT: $MAIL_PORT
    MAIL_USERNAME: $MAIL_USERNAME
    MAIL_PASSWORD: $MAIL_PASSWORD
    MAIL_SENDER: $MAIL_SENDER
    MAIL_SENDER_NAME: $MAIL_SENDER_NAME
    KAFKA_BOOTSTRAP_SERVERS: $KAFKA_BOOTSTRAP_SERVERS
  script:
    - echo "🧪 Running tests in DIND environment. Passing all ENV variables to Gradle container..."
    - for i in $(seq 1 15); do docker info && break; echo "Waiting for docker daemon..."; sleep 1; done
    - echo "DIND is ready. Running tests..."
    - docker run --rm
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $PWD:/app
      -w /app
      -e DOCKER_HOST=$DOCKER_HOST
      -e DOCKER_TLS_CERTDIR=$DOCKER_TLS_CERTDIR
      -e TEST_DB_USERNAME=$TEST_DB_USERNAME
      -e TEST_DB_PASSWORD=$TEST_DB_PASSWORD
      -e TEST_DB_URL=$TEST_DB_URL
      -e TEST_JWT_SECRET=$TEST_JWT_SECRET
      -e TEST_JWT_EXPIRATION=$TEST_JWT_EXPIRATION
      -e TEST_JWT_REFRESH_EXPIRATION=$TEST_JWT_REFRESH_EXPIRATION
      -e TELEG_USERNAME=$TELEG_USERNAME
      -e TELEG_TOKEN=$TELEG_TOKEN
      -e TEST_TELEG_USERNAME=$TEST_TELEG_USERNAME
      -e TEST_TELEG_TOKEN=$TEST_TELEG_TOKEN
      -e MAIL_HOST=$MAIL_HOST
      -e MAIL_PORT=$MAIL_PORT
      -e MAIL_USERNAME=$MAIL_USERNAME
      -e MAIL_PASSWORD=$MAIL_PASSWORD
      -e MAIL_SENDER=$MAIL_SENDER
      -e MAIL_SENDER_NAME=$MAIL_SENDER_NAME
      -e KAFKA_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVERS
      gradle:8.4-jdk17 sh -c "chmod +x ./gradlew && ./gradlew test --no-daemon"
  artifacts:
    reports:
      junit: "**/build/test-results/test/TEST-*.xml"
  allow_failure: true
  only:
    - master
    - merge_requests
docker-build:
  stage: docker
  image: docker:27.0.3
  services:
    - docker:dind
  script:
    - chmod +x ./gradlew
    - echo "🐳 Building Docker images with Docker Compose..."
    - docker compose -f docker-compose.yml build
  only:
    - master
deploy:
  stage: deploy
  image: docker:27.0.3
  services:
    - docker:dind
  script:
    - echo "🚀 Starting containers for testing..."
    - echo "MYSQL_DATABASE=task" >> .env
    - echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" >> .env
    - echo "MYSQL_USER=$MYSQL_USER" >> .env
    - echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env
    - echo "DB_URL=$DB_URL" >> .env
    - echo "DB_USERNAME=$DB_USERNAME" >> .env
    - echo "DB_PASSWORD=$DB_PASSWORD" >> .env
    - echo "KAFKA_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVERS" >> .env
    - echo "JWT_SECRET=$JWT_SECRET" >> .env
    - echo "JWT_EXPIRATION=$JWT_EXPIRATION" >> .env
    - echo "JWT_REFRESH_EXPIRATION=$JWT_REFRESH_EXPIRATION" >> .env
    - echo "TELEG_USERNAME=$TELEG_USERNAME" >> .env
    - echo "TELEG_TOKEN=$TELEG_TOKEN" >> .env
    - echo "MAIL_HOST=$MAIL_HOST" >> .env
    - echo "MAIL_PORT=$MAIL_PORT" >> .env
    - echo "MAIL_USERNAME=$MAIL_USERNAME" >> .env
    - echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env
    - echo "MAIL_SENDER=$MAIL_SENDER" >> .env
    - echo "MAIL_SENDER_NAME=$MAIL_SENDER_NAME" >> .env
      
    - docker compose -f docker-compose.yml up -d
    - docker ps
  when: manual
  only:
    - master